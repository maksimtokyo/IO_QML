# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.30

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /opt/homebrew/Cellar/cmake/3.30.5/bin/cmake

# The command to remove a file.
RM = /opt/homebrew/Cellar/cmake/3.30.5/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Users/mac/IO_QML

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Users/mac/IO_QML/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake cache editor..."
	/opt/homebrew/Cellar/cmake/3.30.5/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake to regenerate build system..."
	/opt/homebrew/Cellar/cmake/3.30.5/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/opt/homebrew/Cellar/cmake/3.30.5/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/opt/homebrew/Cellar/cmake/3.30.5/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/opt/homebrew/Cellar/cmake/3.30.5/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/opt/homebrew/Cellar/cmake/3.30.5/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/opt/homebrew/Cellar/cmake/3.30.5/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/opt/homebrew/Cellar/cmake/3.30.5/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/mac/IO_QML/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/CMakeFiles /Users/mac/IO_QML/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/mac/IO_QML/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named appIO_QML

# Build rule for target.
appIO_QML: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 appIO_QML
.PHONY : appIO_QML

# fast build rule for target.
appIO_QML/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build
.PHONY : appIO_QML/fast

#=============================================================================
# Target rules for targets named appIO_QML_qmltyperegistration

# Build rule for target.
appIO_QML_qmltyperegistration: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 appIO_QML_qmltyperegistration
.PHONY : appIO_QML_qmltyperegistration

# fast build rule for target.
appIO_QML_qmltyperegistration/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML_qmltyperegistration.dir/build.make CMakeFiles/appIO_QML_qmltyperegistration.dir/build
.PHONY : appIO_QML_qmltyperegistration/fast

#=============================================================================
# Target rules for targets named all_qmltyperegistrations

# Build rule for target.
all_qmltyperegistrations: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all_qmltyperegistrations
.PHONY : all_qmltyperegistrations

# fast build rule for target.
all_qmltyperegistrations/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/all_qmltyperegistrations.dir/build.make CMakeFiles/all_qmltyperegistrations.dir/build
.PHONY : all_qmltyperegistrations/fast

#=============================================================================
# Target rules for targets named appIO_QML_qmllint

# Build rule for target.
appIO_QML_qmllint: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 appIO_QML_qmllint
.PHONY : appIO_QML_qmllint

# fast build rule for target.
appIO_QML_qmllint/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML_qmllint.dir/build.make CMakeFiles/appIO_QML_qmllint.dir/build
.PHONY : appIO_QML_qmllint/fast

#=============================================================================
# Target rules for targets named appIO_QML_qmllint_json

# Build rule for target.
appIO_QML_qmllint_json: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 appIO_QML_qmllint_json
.PHONY : appIO_QML_qmllint_json

# fast build rule for target.
appIO_QML_qmllint_json/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML_qmllint_json.dir/build.make CMakeFiles/appIO_QML_qmllint_json.dir/build
.PHONY : appIO_QML_qmllint_json/fast

#=============================================================================
# Target rules for targets named appIO_QML_qmllint_module

# Build rule for target.
appIO_QML_qmllint_module: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 appIO_QML_qmllint_module
.PHONY : appIO_QML_qmllint_module

# fast build rule for target.
appIO_QML_qmllint_module/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML_qmllint_module.dir/build.make CMakeFiles/appIO_QML_qmllint_module.dir/build
.PHONY : appIO_QML_qmllint_module/fast

#=============================================================================
# Target rules for targets named all_qmllint

# Build rule for target.
all_qmllint: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all_qmllint
.PHONY : all_qmllint

# fast build rule for target.
all_qmllint/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/all_qmllint.dir/build.make CMakeFiles/all_qmllint.dir/build
.PHONY : all_qmllint/fast

#=============================================================================
# Target rules for targets named all_qmllint_json

# Build rule for target.
all_qmllint_json: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all_qmllint_json
.PHONY : all_qmllint_json

# fast build rule for target.
all_qmllint_json/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/all_qmllint_json.dir/build.make CMakeFiles/all_qmllint_json.dir/build
.PHONY : all_qmllint_json/fast

#=============================================================================
# Target rules for targets named all_qmllint_module

# Build rule for target.
all_qmllint_module: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all_qmllint_module
.PHONY : all_qmllint_module

# fast build rule for target.
all_qmllint_module/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/all_qmllint_module.dir/build.make CMakeFiles/all_qmllint_module.dir/build
.PHONY : all_qmllint_module/fast

#=============================================================================
# Target rules for targets named appIO_QML_tooling

# Build rule for target.
appIO_QML_tooling: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 appIO_QML_tooling
.PHONY : appIO_QML_tooling

# fast build rule for target.
appIO_QML_tooling/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML_tooling.dir/build.make CMakeFiles/appIO_QML_tooling.dir/build
.PHONY : appIO_QML_tooling/fast

#=============================================================================
# Target rules for targets named appIO_QML_qmlimportscan

# Build rule for target.
appIO_QML_qmlimportscan: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 appIO_QML_qmlimportscan
.PHONY : appIO_QML_qmlimportscan

# fast build rule for target.
appIO_QML_qmlimportscan/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML_qmlimportscan.dir/build.make CMakeFiles/appIO_QML_qmlimportscan.dir/build
.PHONY : appIO_QML_qmlimportscan/fast

#=============================================================================
# Target rules for targets named appIO_QML_autogen_timestamp_deps

# Build rule for target.
appIO_QML_autogen_timestamp_deps: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 appIO_QML_autogen_timestamp_deps
.PHONY : appIO_QML_autogen_timestamp_deps

# fast build rule for target.
appIO_QML_autogen_timestamp_deps/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML_autogen_timestamp_deps.dir/build.make CMakeFiles/appIO_QML_autogen_timestamp_deps.dir/build
.PHONY : appIO_QML_autogen_timestamp_deps/fast

#=============================================================================
# Target rules for targets named appIO_QML_autogen

# Build rule for target.
appIO_QML_autogen: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 appIO_QML_autogen
.PHONY : appIO_QML_autogen

# fast build rule for target.
appIO_QML_autogen/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML_autogen.dir/build.make CMakeFiles/appIO_QML_autogen.dir/build
.PHONY : appIO_QML_autogen/fast

#=============================================================================
# Target rules for targets named Experimental

# Build rule for target.
Experimental: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Experimental
.PHONY : Experimental

# fast build rule for target.
Experimental/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/Experimental.dir/build.make td/CMakeFiles/Experimental.dir/build
.PHONY : Experimental/fast

#=============================================================================
# Target rules for targets named Nightly

# Build rule for target.
Nightly: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Nightly
.PHONY : Nightly

# fast build rule for target.
Nightly/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/Nightly.dir/build.make td/CMakeFiles/Nightly.dir/build
.PHONY : Nightly/fast

#=============================================================================
# Target rules for targets named Continuous

# Build rule for target.
Continuous: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Continuous
.PHONY : Continuous

# fast build rule for target.
Continuous/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/Continuous.dir/build.make td/CMakeFiles/Continuous.dir/build
.PHONY : Continuous/fast

#=============================================================================
# Target rules for targets named NightlyMemoryCheck

# Build rule for target.
NightlyMemoryCheck: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyMemoryCheck
.PHONY : NightlyMemoryCheck

# fast build rule for target.
NightlyMemoryCheck/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/NightlyMemoryCheck.dir/build.make td/CMakeFiles/NightlyMemoryCheck.dir/build
.PHONY : NightlyMemoryCheck/fast

#=============================================================================
# Target rules for targets named NightlyStart

# Build rule for target.
NightlyStart: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyStart
.PHONY : NightlyStart

# fast build rule for target.
NightlyStart/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/NightlyStart.dir/build.make td/CMakeFiles/NightlyStart.dir/build
.PHONY : NightlyStart/fast

#=============================================================================
# Target rules for targets named NightlyUpdate

# Build rule for target.
NightlyUpdate: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyUpdate
.PHONY : NightlyUpdate

# fast build rule for target.
NightlyUpdate/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/NightlyUpdate.dir/build.make td/CMakeFiles/NightlyUpdate.dir/build
.PHONY : NightlyUpdate/fast

#=============================================================================
# Target rules for targets named NightlyConfigure

# Build rule for target.
NightlyConfigure: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyConfigure
.PHONY : NightlyConfigure

# fast build rule for target.
NightlyConfigure/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/NightlyConfigure.dir/build.make td/CMakeFiles/NightlyConfigure.dir/build
.PHONY : NightlyConfigure/fast

#=============================================================================
# Target rules for targets named NightlyBuild

# Build rule for target.
NightlyBuild: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyBuild
.PHONY : NightlyBuild

# fast build rule for target.
NightlyBuild/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/NightlyBuild.dir/build.make td/CMakeFiles/NightlyBuild.dir/build
.PHONY : NightlyBuild/fast

#=============================================================================
# Target rules for targets named NightlyTest

# Build rule for target.
NightlyTest: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyTest
.PHONY : NightlyTest

# fast build rule for target.
NightlyTest/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/NightlyTest.dir/build.make td/CMakeFiles/NightlyTest.dir/build
.PHONY : NightlyTest/fast

#=============================================================================
# Target rules for targets named NightlyCoverage

# Build rule for target.
NightlyCoverage: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyCoverage
.PHONY : NightlyCoverage

# fast build rule for target.
NightlyCoverage/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/NightlyCoverage.dir/build.make td/CMakeFiles/NightlyCoverage.dir/build
.PHONY : NightlyCoverage/fast

#=============================================================================
# Target rules for targets named NightlyMemCheck

# Build rule for target.
NightlyMemCheck: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlyMemCheck
.PHONY : NightlyMemCheck

# fast build rule for target.
NightlyMemCheck/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/NightlyMemCheck.dir/build.make td/CMakeFiles/NightlyMemCheck.dir/build
.PHONY : NightlyMemCheck/fast

#=============================================================================
# Target rules for targets named NightlySubmit

# Build rule for target.
NightlySubmit: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 NightlySubmit
.PHONY : NightlySubmit

# fast build rule for target.
NightlySubmit/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/NightlySubmit.dir/build.make td/CMakeFiles/NightlySubmit.dir/build
.PHONY : NightlySubmit/fast

#=============================================================================
# Target rules for targets named ExperimentalStart

# Build rule for target.
ExperimentalStart: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalStart
.PHONY : ExperimentalStart

# fast build rule for target.
ExperimentalStart/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ExperimentalStart.dir/build.make td/CMakeFiles/ExperimentalStart.dir/build
.PHONY : ExperimentalStart/fast

#=============================================================================
# Target rules for targets named ExperimentalUpdate

# Build rule for target.
ExperimentalUpdate: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalUpdate
.PHONY : ExperimentalUpdate

# fast build rule for target.
ExperimentalUpdate/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ExperimentalUpdate.dir/build.make td/CMakeFiles/ExperimentalUpdate.dir/build
.PHONY : ExperimentalUpdate/fast

#=============================================================================
# Target rules for targets named ExperimentalConfigure

# Build rule for target.
ExperimentalConfigure: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalConfigure
.PHONY : ExperimentalConfigure

# fast build rule for target.
ExperimentalConfigure/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ExperimentalConfigure.dir/build.make td/CMakeFiles/ExperimentalConfigure.dir/build
.PHONY : ExperimentalConfigure/fast

#=============================================================================
# Target rules for targets named ExperimentalBuild

# Build rule for target.
ExperimentalBuild: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalBuild
.PHONY : ExperimentalBuild

# fast build rule for target.
ExperimentalBuild/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ExperimentalBuild.dir/build.make td/CMakeFiles/ExperimentalBuild.dir/build
.PHONY : ExperimentalBuild/fast

#=============================================================================
# Target rules for targets named ExperimentalTest

# Build rule for target.
ExperimentalTest: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalTest
.PHONY : ExperimentalTest

# fast build rule for target.
ExperimentalTest/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ExperimentalTest.dir/build.make td/CMakeFiles/ExperimentalTest.dir/build
.PHONY : ExperimentalTest/fast

#=============================================================================
# Target rules for targets named ExperimentalCoverage

# Build rule for target.
ExperimentalCoverage: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalCoverage
.PHONY : ExperimentalCoverage

# fast build rule for target.
ExperimentalCoverage/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ExperimentalCoverage.dir/build.make td/CMakeFiles/ExperimentalCoverage.dir/build
.PHONY : ExperimentalCoverage/fast

#=============================================================================
# Target rules for targets named ExperimentalMemCheck

# Build rule for target.
ExperimentalMemCheck: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalMemCheck
.PHONY : ExperimentalMemCheck

# fast build rule for target.
ExperimentalMemCheck/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ExperimentalMemCheck.dir/build.make td/CMakeFiles/ExperimentalMemCheck.dir/build
.PHONY : ExperimentalMemCheck/fast

#=============================================================================
# Target rules for targets named ExperimentalSubmit

# Build rule for target.
ExperimentalSubmit: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExperimentalSubmit
.PHONY : ExperimentalSubmit

# fast build rule for target.
ExperimentalSubmit/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ExperimentalSubmit.dir/build.make td/CMakeFiles/ExperimentalSubmit.dir/build
.PHONY : ExperimentalSubmit/fast

#=============================================================================
# Target rules for targets named ContinuousStart

# Build rule for target.
ContinuousStart: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousStart
.PHONY : ContinuousStart

# fast build rule for target.
ContinuousStart/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ContinuousStart.dir/build.make td/CMakeFiles/ContinuousStart.dir/build
.PHONY : ContinuousStart/fast

#=============================================================================
# Target rules for targets named ContinuousUpdate

# Build rule for target.
ContinuousUpdate: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousUpdate
.PHONY : ContinuousUpdate

# fast build rule for target.
ContinuousUpdate/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ContinuousUpdate.dir/build.make td/CMakeFiles/ContinuousUpdate.dir/build
.PHONY : ContinuousUpdate/fast

#=============================================================================
# Target rules for targets named ContinuousConfigure

# Build rule for target.
ContinuousConfigure: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousConfigure
.PHONY : ContinuousConfigure

# fast build rule for target.
ContinuousConfigure/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ContinuousConfigure.dir/build.make td/CMakeFiles/ContinuousConfigure.dir/build
.PHONY : ContinuousConfigure/fast

#=============================================================================
# Target rules for targets named ContinuousBuild

# Build rule for target.
ContinuousBuild: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousBuild
.PHONY : ContinuousBuild

# fast build rule for target.
ContinuousBuild/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ContinuousBuild.dir/build.make td/CMakeFiles/ContinuousBuild.dir/build
.PHONY : ContinuousBuild/fast

#=============================================================================
# Target rules for targets named ContinuousTest

# Build rule for target.
ContinuousTest: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousTest
.PHONY : ContinuousTest

# fast build rule for target.
ContinuousTest/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ContinuousTest.dir/build.make td/CMakeFiles/ContinuousTest.dir/build
.PHONY : ContinuousTest/fast

#=============================================================================
# Target rules for targets named ContinuousCoverage

# Build rule for target.
ContinuousCoverage: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousCoverage
.PHONY : ContinuousCoverage

# fast build rule for target.
ContinuousCoverage/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ContinuousCoverage.dir/build.make td/CMakeFiles/ContinuousCoverage.dir/build
.PHONY : ContinuousCoverage/fast

#=============================================================================
# Target rules for targets named ContinuousMemCheck

# Build rule for target.
ContinuousMemCheck: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousMemCheck
.PHONY : ContinuousMemCheck

# fast build rule for target.
ContinuousMemCheck/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ContinuousMemCheck.dir/build.make td/CMakeFiles/ContinuousMemCheck.dir/build
.PHONY : ContinuousMemCheck/fast

#=============================================================================
# Target rules for targets named ContinuousSubmit

# Build rule for target.
ContinuousSubmit: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ContinuousSubmit
.PHONY : ContinuousSubmit

# fast build rule for target.
ContinuousSubmit/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/ContinuousSubmit.dir/build.make td/CMakeFiles/ContinuousSubmit.dir/build
.PHONY : ContinuousSubmit/fast

#=============================================================================
# Target rules for targets named prepare_cross_compiling

# Build rule for target.
prepare_cross_compiling: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 prepare_cross_compiling
.PHONY : prepare_cross_compiling

# fast build rule for target.
prepare_cross_compiling/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/prepare_cross_compiling.dir/build.make td/CMakeFiles/prepare_cross_compiling.dir/build
.PHONY : prepare_cross_compiling/fast

#=============================================================================
# Target rules for targets named memprof

# Build rule for target.
memprof: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 memprof
.PHONY : memprof

# fast build rule for target.
memprof/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/memprof.dir/build.make td/CMakeFiles/memprof.dir/build
.PHONY : memprof/fast

#=============================================================================
# Target rules for targets named memprof_stat

# Build rule for target.
memprof_stat: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 memprof_stat
.PHONY : memprof_stat

# fast build rule for target.
memprof_stat/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/memprof_stat.dir/build.make td/CMakeFiles/memprof_stat.dir/build
.PHONY : memprof_stat/fast

#=============================================================================
# Target rules for targets named tdapi

# Build rule for target.
tdapi: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdapi
.PHONY : tdapi

# fast build rule for target.
tdapi/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/tdapi.dir/build.make td/CMakeFiles/tdapi.dir/build
.PHONY : tdapi/fast

#=============================================================================
# Target rules for targets named tdmtproto

# Build rule for target.
tdmtproto: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdmtproto
.PHONY : tdmtproto

# fast build rule for target.
tdmtproto/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/tdmtproto.dir/build.make td/CMakeFiles/tdmtproto.dir/build
.PHONY : tdmtproto/fast

#=============================================================================
# Target rules for targets named tdcore

# Build rule for target.
tdcore: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdcore
.PHONY : tdcore

# fast build rule for target.
tdcore/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/tdcore.dir/build.make td/CMakeFiles/tdcore.dir/build
.PHONY : tdcore/fast

#=============================================================================
# Target rules for targets named tdclient

# Build rule for target.
tdclient: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdclient
.PHONY : tdclient

# fast build rule for target.
tdclient/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/tdclient.dir/build.make td/CMakeFiles/tdclient.dir/build
.PHONY : tdclient/fast

#=============================================================================
# Target rules for targets named tdc

# Build rule for target.
tdc: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdc
.PHONY : tdc

# fast build rule for target.
tdc/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/tdc.dir/build.make td/CMakeFiles/tdc.dir/build
.PHONY : tdc/fast

#=============================================================================
# Target rules for targets named tdjson_private

# Build rule for target.
tdjson_private: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdjson_private
.PHONY : tdjson_private

# fast build rule for target.
tdjson_private/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/tdjson_private.dir/build.make td/CMakeFiles/tdjson_private.dir/build
.PHONY : tdjson_private/fast

#=============================================================================
# Target rules for targets named tdjson

# Build rule for target.
tdjson: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdjson
.PHONY : tdjson

# fast build rule for target.
tdjson/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/tdjson.dir/build.make td/CMakeFiles/tdjson.dir/build
.PHONY : tdjson/fast

#=============================================================================
# Target rules for targets named tdjson_static

# Build rule for target.
tdjson_static: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdjson_static
.PHONY : tdjson_static

# fast build rule for target.
tdjson_static/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/tdjson_static.dir/build.make td/CMakeFiles/tdjson_static.dir/build
.PHONY : tdjson_static/fast

#=============================================================================
# Target rules for targets named tg_cli

# Build rule for target.
tg_cli: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tg_cli
.PHONY : tg_cli

# fast build rule for target.
tg_cli/fast:
	$(MAKE) $(MAKESILENT) -f td/CMakeFiles/tg_cli.dir/build.make td/CMakeFiles/tg_cli.dir/build
.PHONY : tg_cli/fast

#=============================================================================
# Target rules for targets named tdtl

# Build rule for target.
tdtl: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdtl
.PHONY : tdtl

# fast build rule for target.
tdtl/fast:
	$(MAKE) $(MAKESILENT) -f td/tdtl/CMakeFiles/tdtl.dir/build.make td/tdtl/CMakeFiles/tdtl.dir/build
.PHONY : tdtl/fast

#=============================================================================
# Target rules for targets named tdutils

# Build rule for target.
tdutils: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdutils
.PHONY : tdutils

# fast build rule for target.
tdutils/fast:
	$(MAKE) $(MAKESILENT) -f td/tdutils/CMakeFiles/tdutils.dir/build.make td/tdutils/CMakeFiles/tdutils.dir/build
.PHONY : tdutils/fast

#=============================================================================
# Target rules for targets named tdmime_auto

# Build rule for target.
tdmime_auto: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdmime_auto
.PHONY : tdmime_auto

# fast build rule for target.
tdmime_auto/fast:
	$(MAKE) $(MAKESILENT) -f td/tdutils/generate/CMakeFiles/tdmime_auto.dir/build.make td/tdutils/generate/CMakeFiles/tdmime_auto.dir/build
.PHONY : tdmime_auto/fast

#=============================================================================
# Target rules for targets named generate_mime_types_gperf

# Build rule for target.
generate_mime_types_gperf: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 generate_mime_types_gperf
.PHONY : generate_mime_types_gperf

# fast build rule for target.
generate_mime_types_gperf/fast:
	$(MAKE) $(MAKESILENT) -f td/tdutils/generate/CMakeFiles/generate_mime_types_gperf.dir/build.make td/tdutils/generate/CMakeFiles/generate_mime_types_gperf.dir/build
.PHONY : generate_mime_types_gperf/fast

#=============================================================================
# Target rules for targets named tl_generate_tlo

# Build rule for target.
tl_generate_tlo: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tl_generate_tlo
.PHONY : tl_generate_tlo

# fast build rule for target.
tl_generate_tlo/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/tl_generate_tlo.dir/build.make td/td/generate/CMakeFiles/tl_generate_tlo.dir/build
.PHONY : tl_generate_tlo/fast

#=============================================================================
# Target rules for targets named tl_writer_cpp

# Build rule for target.
tl_writer_cpp: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tl_writer_cpp
.PHONY : tl_writer_cpp

# fast build rule for target.
tl_writer_cpp/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/tl_writer_cpp.dir/build.make td/td/generate/CMakeFiles/tl_writer_cpp.dir/build
.PHONY : tl_writer_cpp/fast

#=============================================================================
# Target rules for targets named generate_mtproto

# Build rule for target.
generate_mtproto: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 generate_mtproto
.PHONY : generate_mtproto

# fast build rule for target.
generate_mtproto/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/generate_mtproto.dir/build.make td/td/generate/CMakeFiles/generate_mtproto.dir/build
.PHONY : generate_mtproto/fast

#=============================================================================
# Target rules for targets named tl_generate_mtproto

# Build rule for target.
tl_generate_mtproto: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tl_generate_mtproto
.PHONY : tl_generate_mtproto

# fast build rule for target.
tl_generate_mtproto/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/tl_generate_mtproto.dir/build.make td/td/generate/CMakeFiles/tl_generate_mtproto.dir/build
.PHONY : tl_generate_mtproto/fast

#=============================================================================
# Target rules for targets named generate_common

# Build rule for target.
generate_common: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 generate_common
.PHONY : generate_common

# fast build rule for target.
generate_common/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/generate_common.dir/build.make td/td/generate/CMakeFiles/generate_common.dir/build
.PHONY : generate_common/fast

#=============================================================================
# Target rules for targets named tl_generate_common

# Build rule for target.
tl_generate_common: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tl_generate_common
.PHONY : tl_generate_common

# fast build rule for target.
tl_generate_common/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/tl_generate_common.dir/build.make td/td/generate/CMakeFiles/tl_generate_common.dir/build
.PHONY : tl_generate_common/fast

#=============================================================================
# Target rules for targets named generate_c

# Build rule for target.
generate_c: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 generate_c
.PHONY : generate_c

# fast build rule for target.
generate_c/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/generate_c.dir/build.make td/td/generate/CMakeFiles/generate_c.dir/build
.PHONY : generate_c/fast

#=============================================================================
# Target rules for targets named tl_generate_c

# Build rule for target.
tl_generate_c: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tl_generate_c
.PHONY : tl_generate_c

# fast build rule for target.
tl_generate_c/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/tl_generate_c.dir/build.make td/td/generate/CMakeFiles/tl_generate_c.dir/build
.PHONY : tl_generate_c/fast

#=============================================================================
# Target rules for targets named td_generate_java_api

# Build rule for target.
td_generate_java_api: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 td_generate_java_api
.PHONY : td_generate_java_api

# fast build rule for target.
td_generate_java_api/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/td_generate_java_api.dir/build.make td/td/generate/CMakeFiles/td_generate_java_api.dir/build
.PHONY : td_generate_java_api/fast

#=============================================================================
# Target rules for targets named generate_json

# Build rule for target.
generate_json: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 generate_json
.PHONY : generate_json

# fast build rule for target.
generate_json/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/generate_json.dir/build.make td/td/generate/CMakeFiles/generate_json.dir/build
.PHONY : generate_json/fast

#=============================================================================
# Target rules for targets named tl_generate_json

# Build rule for target.
tl_generate_json: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tl_generate_json
.PHONY : tl_generate_json

# fast build rule for target.
tl_generate_json/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/tl_generate_json.dir/build.make td/td/generate/CMakeFiles/tl_generate_json.dir/build
.PHONY : tl_generate_json/fast

#=============================================================================
# Target rules for targets named remove_documentation

# Build rule for target.
remove_documentation: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 remove_documentation
.PHONY : remove_documentation

# fast build rule for target.
remove_documentation/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/CMakeFiles/remove_documentation.dir/build.make td/td/generate/CMakeFiles/remove_documentation.dir/build
.PHONY : remove_documentation/fast

#=============================================================================
# Target rules for targets named tl-parser

# Build rule for target.
tl-parser: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tl-parser
.PHONY : tl-parser

# fast build rule for target.
tl-parser/fast:
	$(MAKE) $(MAKESILENT) -f td/td/generate/tl-parser/CMakeFiles/tl-parser.dir/build.make td/td/generate/tl-parser/CMakeFiles/tl-parser.dir/build
.PHONY : tl-parser/fast

#=============================================================================
# Target rules for targets named tdactor

# Build rule for target.
tdactor: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdactor
.PHONY : tdactor

# fast build rule for target.
tdactor/fast:
	$(MAKE) $(MAKESILENT) -f td/tdactor/CMakeFiles/tdactor.dir/build.make td/tdactor/CMakeFiles/tdactor.dir/build
.PHONY : tdactor/fast

#=============================================================================
# Target rules for targets named example

# Build rule for target.
example: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 example
.PHONY : example

# fast build rule for target.
example/fast:
	$(MAKE) $(MAKESILENT) -f td/tdactor/CMakeFiles/example.dir/build.make td/tdactor/CMakeFiles/example.dir/build
.PHONY : example/fast

#=============================================================================
# Target rules for targets named tdnet

# Build rule for target.
tdnet: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdnet
.PHONY : tdnet

# fast build rule for target.
tdnet/fast:
	$(MAKE) $(MAKESILENT) -f td/tdnet/CMakeFiles/tdnet.dir/build.make td/tdnet/CMakeFiles/tdnet.dir/build
.PHONY : tdnet/fast

#=============================================================================
# Target rules for targets named tdsqlite

# Build rule for target.
tdsqlite: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tdsqlite
.PHONY : tdsqlite

# fast build rule for target.
tdsqlite/fast:
	$(MAKE) $(MAKESILENT) -f td/sqlite/CMakeFiles/tdsqlite.dir/build.make td/sqlite/CMakeFiles/tdsqlite.dir/build
.PHONY : tdsqlite/fast

#=============================================================================
# Target rules for targets named tddb

# Build rule for target.
tddb: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tddb
.PHONY : tddb

# fast build rule for target.
tddb/fast:
	$(MAKE) $(MAKESILENT) -f td/tddb/CMakeFiles/tddb.dir/build.make td/tddb/CMakeFiles/tddb.dir/build
.PHONY : tddb/fast

#=============================================================================
# Target rules for targets named binlog_dump

# Build rule for target.
binlog_dump: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 binlog_dump
.PHONY : binlog_dump

# fast build rule for target.
binlog_dump/fast:
	$(MAKE) $(MAKESILENT) -f td/tddb/CMakeFiles/binlog_dump.dir/build.make td/tddb/CMakeFiles/binlog_dump.dir/build
.PHONY : binlog_dump/fast

#=============================================================================
# Target rules for targets named test-crypto

# Build rule for target.
test-crypto: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test-crypto
.PHONY : test-crypto

# fast build rule for target.
test-crypto/fast:
	$(MAKE) $(MAKESILENT) -f td/test/CMakeFiles/test-crypto.dir/build.make td/test/CMakeFiles/test-crypto.dir/build
.PHONY : test-crypto/fast

#=============================================================================
# Target rules for targets named test-tdutils

# Build rule for target.
test-tdutils: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test-tdutils
.PHONY : test-tdutils

# fast build rule for target.
test-tdutils/fast:
	$(MAKE) $(MAKESILENT) -f td/test/CMakeFiles/test-tdutils.dir/build.make td/test/CMakeFiles/test-tdutils.dir/build
.PHONY : test-tdutils/fast

#=============================================================================
# Target rules for targets named test-online

# Build rule for target.
test-online: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test-online
.PHONY : test-online

# fast build rule for target.
test-online/fast:
	$(MAKE) $(MAKESILENT) -f td/test/CMakeFiles/test-online.dir/build.make td/test/CMakeFiles/test-online.dir/build
.PHONY : test-online/fast

#=============================================================================
# Target rules for targets named run_all_tests

# Build rule for target.
run_all_tests: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 run_all_tests
.PHONY : run_all_tests

# fast build rule for target.
run_all_tests/fast:
	$(MAKE) $(MAKESILENT) -f td/test/CMakeFiles/run_all_tests.dir/build.make td/test/CMakeFiles/run_all_tests.dir/build
.PHONY : run_all_tests/fast

#=============================================================================
# Target rules for targets named bench_crypto

# Build rule for target.
bench_crypto: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_crypto
.PHONY : bench_crypto

# fast build rule for target.
bench_crypto/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_crypto.dir/build.make td/benchmark/CMakeFiles/bench_crypto.dir/build
.PHONY : bench_crypto/fast

#=============================================================================
# Target rules for targets named bench_actor

# Build rule for target.
bench_actor: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_actor
.PHONY : bench_actor

# fast build rule for target.
bench_actor/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_actor.dir/build.make td/benchmark/CMakeFiles/bench_actor.dir/build
.PHONY : bench_actor/fast

#=============================================================================
# Target rules for targets named bench_http

# Build rule for target.
bench_http: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_http
.PHONY : bench_http

# fast build rule for target.
bench_http/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_http.dir/build.make td/benchmark/CMakeFiles/bench_http.dir/build
.PHONY : bench_http/fast

#=============================================================================
# Target rules for targets named bench_http_server

# Build rule for target.
bench_http_server: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_http_server
.PHONY : bench_http_server

# fast build rule for target.
bench_http_server/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_http_server.dir/build.make td/benchmark/CMakeFiles/bench_http_server.dir/build
.PHONY : bench_http_server/fast

#=============================================================================
# Target rules for targets named bench_http_server_cheat

# Build rule for target.
bench_http_server_cheat: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_http_server_cheat
.PHONY : bench_http_server_cheat

# fast build rule for target.
bench_http_server_cheat/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_http_server_cheat.dir/build.make td/benchmark/CMakeFiles/bench_http_server_cheat.dir/build
.PHONY : bench_http_server_cheat/fast

#=============================================================================
# Target rules for targets named bench_http_server_fast

# Build rule for target.
bench_http_server_fast: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_http_server_fast
.PHONY : bench_http_server_fast

# fast build rule for target.
bench_http_server_fast/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_http_server_fast.dir/build.make td/benchmark/CMakeFiles/bench_http_server_fast.dir/build
.PHONY : bench_http_server_fast/fast

#=============================================================================
# Target rules for targets named bench_http_reader

# Build rule for target.
bench_http_reader: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_http_reader
.PHONY : bench_http_reader

# fast build rule for target.
bench_http_reader/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_http_reader.dir/build.make td/benchmark/CMakeFiles/bench_http_reader.dir/build
.PHONY : bench_http_reader/fast

#=============================================================================
# Target rules for targets named bench_handshake

# Build rule for target.
bench_handshake: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_handshake
.PHONY : bench_handshake

# fast build rule for target.
bench_handshake/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_handshake.dir/build.make td/benchmark/CMakeFiles/bench_handshake.dir/build
.PHONY : bench_handshake/fast

#=============================================================================
# Target rules for targets named bench_db

# Build rule for target.
bench_db: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_db
.PHONY : bench_db

# fast build rule for target.
bench_db/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_db.dir/build.make td/benchmark/CMakeFiles/bench_db.dir/build
.PHONY : bench_db/fast

#=============================================================================
# Target rules for targets named bench_tddb

# Build rule for target.
bench_tddb: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_tddb
.PHONY : bench_tddb

# fast build rule for target.
bench_tddb/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_tddb.dir/build.make td/benchmark/CMakeFiles/bench_tddb.dir/build
.PHONY : bench_tddb/fast

#=============================================================================
# Target rules for targets named bench_misc

# Build rule for target.
bench_misc: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_misc
.PHONY : bench_misc

# fast build rule for target.
bench_misc/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_misc.dir/build.make td/benchmark/CMakeFiles/bench_misc.dir/build
.PHONY : bench_misc/fast

#=============================================================================
# Target rules for targets named check_proxy

# Build rule for target.
check_proxy: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 check_proxy
.PHONY : check_proxy

# fast build rule for target.
check_proxy/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/check_proxy.dir/build.make td/benchmark/CMakeFiles/check_proxy.dir/build
.PHONY : check_proxy/fast

#=============================================================================
# Target rules for targets named check_tls

# Build rule for target.
check_tls: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 check_tls
.PHONY : check_tls

# fast build rule for target.
check_tls/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/check_tls.dir/build.make td/benchmark/CMakeFiles/check_tls.dir/build
.PHONY : check_tls/fast

#=============================================================================
# Target rules for targets named rmdir

# Build rule for target.
rmdir: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 rmdir
.PHONY : rmdir

# fast build rule for target.
rmdir/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/rmdir.dir/build.make td/benchmark/CMakeFiles/rmdir.dir/build
.PHONY : rmdir/fast

#=============================================================================
# Target rules for targets named wget

# Build rule for target.
wget: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 wget
.PHONY : wget

# fast build rule for target.
wget/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/wget.dir/build.make td/benchmark/CMakeFiles/wget.dir/build
.PHONY : wget/fast

#=============================================================================
# Target rules for targets named bench_empty

# Build rule for target.
bench_empty: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_empty
.PHONY : bench_empty

# fast build rule for target.
bench_empty/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_empty.dir/build.make td/benchmark/CMakeFiles/bench_empty.dir/build
.PHONY : bench_empty/fast

#=============================================================================
# Target rules for targets named bench_log

# Build rule for target.
bench_log: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_log
.PHONY : bench_log

# fast build rule for target.
bench_log/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_log.dir/build.make td/benchmark/CMakeFiles/bench_log.dir/build
.PHONY : bench_log/fast

#=============================================================================
# Target rules for targets named bench_queue

# Build rule for target.
bench_queue: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench_queue
.PHONY : bench_queue

# fast build rule for target.
bench_queue/fast:
	$(MAKE) $(MAKESILENT) -f td/benchmark/CMakeFiles/bench_queue.dir/build.make td/benchmark/CMakeFiles/bench_queue.dir/build
.PHONY : bench_queue/fast

appIO_QML_autogen/mocs_compilation.o: appIO_QML_autogen/mocs_compilation.cpp.o
.PHONY : appIO_QML_autogen/mocs_compilation.o

# target to build an object file
appIO_QML_autogen/mocs_compilation.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/appIO_QML_autogen/mocs_compilation.cpp.o
.PHONY : appIO_QML_autogen/mocs_compilation.cpp.o

appIO_QML_autogen/mocs_compilation.i: appIO_QML_autogen/mocs_compilation.cpp.i
.PHONY : appIO_QML_autogen/mocs_compilation.i

# target to preprocess a source file
appIO_QML_autogen/mocs_compilation.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/appIO_QML_autogen/mocs_compilation.cpp.i
.PHONY : appIO_QML_autogen/mocs_compilation.cpp.i

appIO_QML_autogen/mocs_compilation.s: appIO_QML_autogen/mocs_compilation.cpp.s
.PHONY : appIO_QML_autogen/mocs_compilation.s

# target to generate assembly for a file
appIO_QML_autogen/mocs_compilation.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/appIO_QML_autogen/mocs_compilation.cpp.s
.PHONY : appIO_QML_autogen/mocs_compilation.cpp.s

appio_qml_qmltyperegistrations.o: appio_qml_qmltyperegistrations.cpp.o
.PHONY : appio_qml_qmltyperegistrations.o

# target to build an object file
appio_qml_qmltyperegistrations.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/appio_qml_qmltyperegistrations.cpp.o
.PHONY : appio_qml_qmltyperegistrations.cpp.o

appio_qml_qmltyperegistrations.i: appio_qml_qmltyperegistrations.cpp.i
.PHONY : appio_qml_qmltyperegistrations.i

# target to preprocess a source file
appio_qml_qmltyperegistrations.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/appio_qml_qmltyperegistrations.cpp.i
.PHONY : appio_qml_qmltyperegistrations.cpp.i

appio_qml_qmltyperegistrations.s: appio_qml_qmltyperegistrations.cpp.s
.PHONY : appio_qml_qmltyperegistrations.s

# target to generate assembly for a file
appio_qml_qmltyperegistrations.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/appio_qml_qmltyperegistrations.cpp.s
.PHONY : appio_qml_qmltyperegistrations.cpp.s

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.o: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.o
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.o

# target to build an object file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.o
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.o

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.i: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.i
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.i

# target to preprocess a source file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.i
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.i

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.s: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.s
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.s

# target to generate assembly for a file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.s
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.cpp.s

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.o: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.o
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.o

# target to build an object file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.o
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.o

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.i: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.i
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.i

# target to preprocess a source file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.i
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.i

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.s: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.s
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.s

# target to generate assembly for a file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.s
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.cpp.s

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.o: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.o
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.o

# target to build an object file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.o
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.o

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.i: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.i
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.i

# target to preprocess a source file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.i
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.i

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.s: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.s
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.s

# target to generate assembly for a file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.s
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.cpp.s

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.o: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.o
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.o

# target to build an object file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.o
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.o

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.i: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.i
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.i

# target to preprocess a source file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.i
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.i

build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.s: build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.s
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.s

# target to generate assembly for a file
build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.s
.PHONY : build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.cpp.s

global_tg_value.o: global_tg_value.cpp.o
.PHONY : global_tg_value.o

# target to build an object file
global_tg_value.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/global_tg_value.cpp.o
.PHONY : global_tg_value.cpp.o

global_tg_value.i: global_tg_value.cpp.i
.PHONY : global_tg_value.i

# target to preprocess a source file
global_tg_value.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/global_tg_value.cpp.i
.PHONY : global_tg_value.cpp.i

global_tg_value.s: global_tg_value.cpp.s
.PHONY : global_tg_value.s

# target to generate assembly for a file
global_tg_value.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/global_tg_value.cpp.s
.PHONY : global_tg_value.cpp.s

main.o: main.cpp.o
.PHONY : main.o

# target to build an object file
main.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/main.cpp.o
.PHONY : main.cpp.o

main.i: main.cpp.i
.PHONY : main.i

# target to preprocess a source file
main.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/main.cpp.i
.PHONY : main.cpp.i

main.s: main.cpp.s
.PHONY : main.s

# target to generate assembly for a file
main.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/main.cpp.s
.PHONY : main.cpp.s

tg_chatslistmodel.o: tg_chatslistmodel.cpp.o
.PHONY : tg_chatslistmodel.o

# target to build an object file
tg_chatslistmodel.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_chatslistmodel.cpp.o
.PHONY : tg_chatslistmodel.cpp.o

tg_chatslistmodel.i: tg_chatslistmodel.cpp.i
.PHONY : tg_chatslistmodel.i

# target to preprocess a source file
tg_chatslistmodel.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_chatslistmodel.cpp.i
.PHONY : tg_chatslistmodel.cpp.i

tg_chatslistmodel.s: tg_chatslistmodel.cpp.s
.PHONY : tg_chatslistmodel.s

# target to generate assembly for a file
tg_chatslistmodel.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_chatslistmodel.cpp.s
.PHONY : tg_chatslistmodel.cpp.s

tg_controller_qt.o: tg_controller_qt.cpp.o
.PHONY : tg_controller_qt.o

# target to build an object file
tg_controller_qt.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_controller_qt.cpp.o
.PHONY : tg_controller_qt.cpp.o

tg_controller_qt.i: tg_controller_qt.cpp.i
.PHONY : tg_controller_qt.i

# target to preprocess a source file
tg_controller_qt.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_controller_qt.cpp.i
.PHONY : tg_controller_qt.cpp.i

tg_controller_qt.s: tg_controller_qt.cpp.s
.PHONY : tg_controller_qt.s

# target to generate assembly for a file
tg_controller_qt.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_controller_qt.cpp.s
.PHONY : tg_controller_qt.cpp.s

tg_peson_qt.o: tg_peson_qt.cpp.o
.PHONY : tg_peson_qt.o

# target to build an object file
tg_peson_qt.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_peson_qt.cpp.o
.PHONY : tg_peson_qt.cpp.o

tg_peson_qt.i: tg_peson_qt.cpp.i
.PHONY : tg_peson_qt.i

# target to preprocess a source file
tg_peson_qt.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_peson_qt.cpp.i
.PHONY : tg_peson_qt.cpp.i

tg_peson_qt.s: tg_peson_qt.cpp.s
.PHONY : tg_peson_qt.s

# target to generate assembly for a file
tg_peson_qt.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_peson_qt.cpp.s
.PHONY : tg_peson_qt.cpp.s

tg_while_handler_qt.o: tg_while_handler_qt.cpp.o
.PHONY : tg_while_handler_qt.o

# target to build an object file
tg_while_handler_qt.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_while_handler_qt.cpp.o
.PHONY : tg_while_handler_qt.cpp.o

tg_while_handler_qt.i: tg_while_handler_qt.cpp.i
.PHONY : tg_while_handler_qt.i

# target to preprocess a source file
tg_while_handler_qt.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_while_handler_qt.cpp.i
.PHONY : tg_while_handler_qt.cpp.i

tg_while_handler_qt.s: tg_while_handler_qt.cpp.s
.PHONY : tg_while_handler_qt.s

# target to generate assembly for a file
tg_while_handler_qt.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/appIO_QML.dir/build.make CMakeFiles/appIO_QML.dir/tg_while_handler_qt.cpp.s
.PHONY : tg_while_handler_qt.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... Continuous"
	@echo "... ContinuousBuild"
	@echo "... ContinuousConfigure"
	@echo "... ContinuousCoverage"
	@echo "... ContinuousMemCheck"
	@echo "... ContinuousStart"
	@echo "... ContinuousSubmit"
	@echo "... ContinuousTest"
	@echo "... ContinuousUpdate"
	@echo "... Experimental"
	@echo "... ExperimentalBuild"
	@echo "... ExperimentalConfigure"
	@echo "... ExperimentalCoverage"
	@echo "... ExperimentalMemCheck"
	@echo "... ExperimentalStart"
	@echo "... ExperimentalSubmit"
	@echo "... ExperimentalTest"
	@echo "... ExperimentalUpdate"
	@echo "... Nightly"
	@echo "... NightlyBuild"
	@echo "... NightlyConfigure"
	@echo "... NightlyCoverage"
	@echo "... NightlyMemCheck"
	@echo "... NightlyMemoryCheck"
	@echo "... NightlyStart"
	@echo "... NightlySubmit"
	@echo "... NightlyTest"
	@echo "... NightlyUpdate"
	@echo "... all_qmllint"
	@echo "... all_qmllint_json"
	@echo "... all_qmllint_module"
	@echo "... all_qmltyperegistrations"
	@echo "... appIO_QML_autogen"
	@echo "... appIO_QML_autogen_timestamp_deps"
	@echo "... appIO_QML_qmlimportscan"
	@echo "... appIO_QML_qmllint"
	@echo "... appIO_QML_qmllint_json"
	@echo "... appIO_QML_qmllint_module"
	@echo "... appIO_QML_qmltyperegistration"
	@echo "... prepare_cross_compiling"
	@echo "... tdmime_auto"
	@echo "... tl_generate_c"
	@echo "... tl_generate_common"
	@echo "... tl_generate_json"
	@echo "... tl_generate_mtproto"
	@echo "... tl_generate_tlo"
	@echo "... appIO_QML"
	@echo "... appIO_QML_tooling"
	@echo "... bench_actor"
	@echo "... bench_crypto"
	@echo "... bench_db"
	@echo "... bench_empty"
	@echo "... bench_handshake"
	@echo "... bench_http"
	@echo "... bench_http_reader"
	@echo "... bench_http_server"
	@echo "... bench_http_server_cheat"
	@echo "... bench_http_server_fast"
	@echo "... bench_log"
	@echo "... bench_misc"
	@echo "... bench_queue"
	@echo "... bench_tddb"
	@echo "... binlog_dump"
	@echo "... check_proxy"
	@echo "... check_tls"
	@echo "... example"
	@echo "... generate_c"
	@echo "... generate_common"
	@echo "... generate_json"
	@echo "... generate_mime_types_gperf"
	@echo "... generate_mtproto"
	@echo "... memprof"
	@echo "... memprof_stat"
	@echo "... remove_documentation"
	@echo "... rmdir"
	@echo "... run_all_tests"
	@echo "... td_generate_java_api"
	@echo "... tdactor"
	@echo "... tdapi"
	@echo "... tdc"
	@echo "... tdclient"
	@echo "... tdcore"
	@echo "... tddb"
	@echo "... tdjson"
	@echo "... tdjson_private"
	@echo "... tdjson_static"
	@echo "... tdmtproto"
	@echo "... tdnet"
	@echo "... tdsqlite"
	@echo "... tdtl"
	@echo "... tdutils"
	@echo "... test-crypto"
	@echo "... test-online"
	@echo "... test-tdutils"
	@echo "... tg_cli"
	@echo "... tl-parser"
	@echo "... tl_writer_cpp"
	@echo "... wget"
	@echo "... appIO_QML_autogen/mocs_compilation.o"
	@echo "... appIO_QML_autogen/mocs_compilation.i"
	@echo "... appIO_QML_autogen/mocs_compilation.s"
	@echo "... appio_qml_qmltyperegistrations.o"
	@echo "... appio_qml_qmltyperegistrations.i"
	@echo "... appio_qml_qmltyperegistrations.s"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.o"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.i"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_appIO_QML_raw_qml_0.s"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.o"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.i"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.qt/rcc/qrc_qmake_IO_QML.s"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.o"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.i"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_Main_qml.s"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.o"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.i"
	@echo "... build/Desktop_arm_darwin_generic_mach_o_64bit-Profile/.rcc/qmlcache/appIO_QML_qmlcache_loader.s"
	@echo "... global_tg_value.o"
	@echo "... global_tg_value.i"
	@echo "... global_tg_value.s"
	@echo "... main.o"
	@echo "... main.i"
	@echo "... main.s"
	@echo "... tg_chatslistmodel.o"
	@echo "... tg_chatslistmodel.i"
	@echo "... tg_chatslistmodel.s"
	@echo "... tg_controller_qt.o"
	@echo "... tg_controller_qt.i"
	@echo "... tg_controller_qt.s"
	@echo "... tg_peson_qt.o"
	@echo "... tg_peson_qt.i"
	@echo "... tg_peson_qt.s"
	@echo "... tg_while_handler_qt.o"
	@echo "... tg_while_handler_qt.i"
	@echo "... tg_while_handler_qt.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

